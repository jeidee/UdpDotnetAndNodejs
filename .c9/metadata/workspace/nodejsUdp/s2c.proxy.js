{"filter":false,"title":"s2c.proxy.js","tooltip":"/nodejsUdp/s2c.proxy.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":110,"column":0}},"nl":"\n","lines":["var s2cmessage = require('./s2c.message.js');","var entity = require('./entity.js');","var moment = require('moment');","","var proxy = function() {","};","","proxy.prototype = {","\tResLogin : function(to_ip, to_port, server, uid, is_ok, error_msg, public_ip, public_port) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.ResLoginMessage();","\t\t\tsend_message.id = \"100\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.is_ok = is_ok;","\t\t\tsend_message.error_msg = error_msg;","\t\t\tsend_message.public_ip = public_ip;","\t\t\tsend_message.public_port = public_port;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResLogout : function(to_ip, to_port, server, uid, is_ok, error_msg) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.ResLogoutMessage();","\t\t\tsend_message.id = \"101\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.is_ok = is_ok;","\t\t\tsend_message.error_msg = error_msg;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResJoin : function(to_ip, to_port, server, uid, is_ok, error_msg) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.ResJoinMessage();","\t\t\tsend_message.id = \"102\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.is_ok = is_ok;","\t\t\tsend_message.error_msg = error_msg;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tNotifyJoin : function(to_ip, to_port, server, uid, group, public_ip, public_port) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.NotifyJoinMessage();","\t\t\tsend_message.id = \"103\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.group = group;","\t\t\tsend_message.public_ip = public_ip;","\t\t\tsend_message.public_port = public_port;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResLeave : function(to_ip, to_port, server, uid, is_ok, error_msg) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.ResLeaveMessage();","\t\t\tsend_message.id = \"104\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.is_ok = is_ok;","\t\t\tsend_message.error_msg = error_msg;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tNotifyLeave : function(to_ip, to_port, server, uid, group) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.NotifyLeaveMessage();","\t\t\tsend_message.id = \"105\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.group = group;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResUserList : function(to_ip, to_port, server, uid, user_list) {","\t\ttry {","\t\t\tvar send_message = new s2cmessage.ResUserListMessage();","\t\t\tsend_message.id = \"106\";","\t\t\tsend_message.uid = uid;","\t\t\tsend_message.user_list = user_list;","","\t\t\tvar send_data = new Buffer(JSON.stringify(send_message));","\t\t\tserver.send(send_data, 0, send_data.length, to_port, to_ip);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","};","","exports.proxy = proxy;"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":45}},"text":"var s2cmessage = require('./s2c.message.js');"},{"action":"insertText","range":{"start":{"row":0,"column":45},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":139,"column":0}},"lines":["var entity = require('./chat.entity.js');","var moment = require('moment');","","var proxy = function() {","\tthis.protocol = undefined;","};","","proxy.prototype = {","\tResLogin : function(socket, uid, isOk, errorMessage, publicIp, publicPort, dummy) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.ResLoginMessage();","\t\t\tsendMessage.id = \"100\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.isOk = isOk;","\t\t\tsendMessage.errorMessage = errorMessage;","\t\t\tsendMessage.publicIp = publicIp;","\t\t\tsendMessage.publicPort = publicPort;","\t\t\tsendMessage.dummy = dummy;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResLogout : function(socket, uid, isOk, errorMessage) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.ResLogoutMessage();","\t\t\tsendMessage.id = \"101\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.isOk = isOk;","\t\t\tsendMessage.errorMessage = errorMessage;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResJoin : function(socket, uid, isOk, errorMessage) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.ResJoinMessage();","\t\t\tsendMessage.id = \"102\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.isOk = isOk;","\t\t\tsendMessage.errorMessage = errorMessage;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tNotifyJoin : function(socket, uid, group, publicIp, publicPort) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.NotifyJoinMessage();","\t\t\tsendMessage.id = \"103\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.group = group;","\t\t\tsendMessage.publicIp = publicIp;","\t\t\tsendMessage.publicPort = publicPort;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResLeave : function(socket, uid, isOk, errorMessage) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.ResLeaveMessage();","\t\t\tsendMessage.id = \"104\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.isOk = isOk;","\t\t\tsendMessage.errorMessage = errorMessage;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tNotifyLeave : function(socket, uid, group) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.NotifyLeaveMessage();","\t\t\tsendMessage.id = \"105\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.group = group;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResUserList : function(socket, uid, userList) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.ResUserListMessage();","\t\t\tsendMessage.id = \"106\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.userList = userList;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tResChat : function(socket, uid, isOk, errorMessage) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.ResChatMessage();","\t\t\tsendMessage.id = \"107\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.isOk = isOk;","\t\t\tsendMessage.errorMessage = errorMessage;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","\tNotifyChat : function(socket, uid, chat) {","\t\ttry {","\t\t\tvar sendMessage = new s2cmessage.NotifyChatMessage();","\t\t\tsendMessage.id = \"108\";","\t\t\tsendMessage.uid = uid;","\t\t\tsendMessage.chat = chat;","","\t\t\tvar sendData = new Buffer(JSON.stringify(sendMessage));","\t\t\tthis.protocol.sendPacket(socket, sendData);","\t\t} catch(e) {","\t\t\tconsole.log(e);","\t\t}","\t},","};","","exports.proxy = proxy;"]}]}]]},"ace":{"folds":[],"scrolltop":1400,"scrollleft":0,"selection":{"start":{"row":139,"column":0},"end":{"row":139,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":34,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1411008972531,"hash":"50a164bbe0dd62baa84d41f9376c173495b81a79"}